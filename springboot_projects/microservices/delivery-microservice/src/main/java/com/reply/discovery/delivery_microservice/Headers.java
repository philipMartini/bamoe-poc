package com.reply.discovery.delivery_microservice;

import lombok.AccessLevel;
import lombok.NoArgsConstructor;

@NoArgsConstructor(access = AccessLevel.PRIVATE)
public class Headers
{
	/**
	 * The Sender header. Specifies the client name
	 */
	public static final String SENDER = "Sender";
	/**
	 * An unique transaction id, generated by the caller. This may be generated by
	 * API-GW if client does not provide its own
	 */
	public static final String SENDER_TRANSACTION_ID = "Sender-Transaction-Id";
	/**
	 * Original timestamp on sender side
	 */
	public static final String TIMESTAMP = "Timestamp";
	/**
	 * X-Credential-Identifier (placed by Kong after Basic Auth)
	 */
	public static final String X_CREDENTIAL_IDENTIFIER = "X-Credential-Identifier";
	/**
	 * The full api version actually responding
	 */
	public static final String API_VERSION = "Api-Version";
	/**
	 * The full microservice version actually responding
	 */
	public static final String APP_VERSION = "App-Version";
	/**
	 * The Log-Level API-name. This header MUST be inserted and / or overwritten by
	 * the front facing API-GW to avoid clients sending low-level log directive
	 */
	public static final String LOG_PAYLOAD = "X-Log-Payload";
	/**
	 * Header representing a Locale Java object
	 */
	public static final String LOCALE = "Locale";
	/**
	 * Kong correlation Id header name
	 */
	public static final String KONG_CORRELATION_ID = "Kong-Correlation-Id";
	/**
	 * Sender callback url - the URL to use for the callback invocation to communicate the result in an asynchronous integration
	 */
	public static final String SENDER_CALLBACK_URL = "Sender-Callback-Url";
	/**
	 * Original callback url - the URL to use on the original client system to communicate the result of an asynchronous operation. This has the same value of Sender-Callback-Url but a different name since it is used in the return flow
	 */
	public static final String ORIGINAL_CALLBACK_URL = "Original-Callback-Url";
	/**
	 * Kong MDW callback url - the URL to use on the client system to communicate the microservice the result of an asynchronous operation
	 */
	public static final String KONG_MDW_CALLBACK_URL = "Kong-Mdw-Callback-Url";
	/**
	 * The correlation ID of the sender - To be used for the integration that requires a callback from upstream to the sender
	 */
	public static final String SENDER_CORRELATION_ID = "Sender-Correlation-Id";
	/**
	 * The camunda iteration id/upstream name - To be used to inprove the readability of the logs 
	 */
	public static final String CAMUNDA_ITERATION_ID = "camunda-iteration-id";

	/**
	 * Upstream authorization previously taken by Kong
	 */
	public static final String UPSTREAM_AUTHORIZATION = "Upstream-Authorization";
	/**
	 * Sender transaction datetime header
	 */
	public static final String SENDER_TRANSACTION_DATETIME = "Sender-Transaction-Datetime";
}
